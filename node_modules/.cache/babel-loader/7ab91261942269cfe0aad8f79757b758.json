{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as constants from './constants';\nconst defaultState = fromJS({\n  topicList: [],\n  articleList: [],\n  recommendList: [],\n  writerList: [],\n  articlePage: 1\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case constants.CHANGE_HOME_DATA:\n      return state.merge({\n        topicList: fromJS(action.topicList),\n        articleList: fromJS(action.articleList),\n        recommendList: fromJS(action.recommendList),\n        writerList: fromJS(action.writerList)\n      });\n\n    case constants.ADD_ARTICLE_LIST:\n      return state.set('articleList', state.get('articleList').concat(action.list));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/wenping/git_repo/Jian-shu/jianshu/src/pages/home/store/reducer.js"],"names":["fromJS","constants","defaultState","topicList","articleList","recommendList","writerList","articlePage","state","action","type","CHANGE_HOME_DATA","merge","ADD_ARTICLE_LIST","set","get","concat","list"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AAC1BG,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,WAAW,EAAE,EAFa;AAG1BC,EAAAA,aAAa,EAAE,EAHW;AAI1BC,EAAAA,UAAU,EAAC,EAJe;AAK1BC,EAAAA,WAAW,EAAE;AALa,CAAD,CAA3B;AAQA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,SAAS,CAACU,gBAAf;AACE,aAAOH,KAAK,CAACI,KAAN,CAAY;AACjBT,QAAAA,SAAS,EAAEH,MAAM,CAACS,MAAM,CAACN,SAAR,CADA;AAEjBC,QAAAA,WAAW,EAAEJ,MAAM,CAACS,MAAM,CAACL,WAAR,CAFF;AAGjBC,QAAAA,aAAa,EAAEL,MAAM,CAACS,MAAM,CAACJ,aAAR,CAHJ;AAIjBC,QAAAA,UAAU,EAACN,MAAM,CAACS,MAAM,CAACH,UAAR;AAJA,OAAZ,CAAP;;AAMF,SAAKL,SAAS,CAACY,gBAAf;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,aAAV,EAAwBN,KAAK,CAACO,GAAN,CAAU,aAAV,EAAyBC,MAAzB,CAAgCP,MAAM,CAACQ,IAAvC,CAAxB,CAAP;;AACF;AACE,aAAOT,KAAP;AAXJ;AAaD,CAdD","sourcesContent":["import { fromJS } from 'immutable';\nimport * as constants from './constants';\nconst defaultState = fromJS({\n  topicList: [],\n  articleList: [],\n  recommendList: [],\n  writerList:[],\n  articlePage: 1\n});\n\nexport default (state = defaultState, action) => {\n  switch(action.type) {\n    case constants.CHANGE_HOME_DATA:\n      return state.merge({\n        topicList: fromJS(action.topicList),\n        articleList: fromJS(action.articleList),\n        recommendList: fromJS(action.recommendList),\n        writerList:fromJS(action.writerList)\n      });\n    case constants.ADD_ARTICLE_LIST:\n      return state.set('articleList',state.get('articleList').concat(action.list))\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}